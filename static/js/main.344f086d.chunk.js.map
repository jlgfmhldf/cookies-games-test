{"version":3,"sources":["api/index.js","components/Article/index.js","components/Pagination/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["isOwnerId","id","n","isNaN","parseFloat","isFinite","Article","text","link","additionalLink","image","href","target","rel","className","src","alt","Pagination","onBtnClick","prevDisabled","nextDisabled","role","aria-label","onClick","disabled","App","articlesInitialState","count","items","useState","setID","loading","setLoading","needLoading","setNeedLoading","error","setError","loadOffset","setLoadOffset","articles","setArticles","loadArticles","offset","url","fetch","then","data","json","getArticles","error_msg","response","catch","finally","handleFormSubmit","event","preventDefault","useEffect","onSubmit","type","placeholder","onChange","value","length","map","articleID","owner_id","copy_history","attachments","props","images","find","imagesSizes","photo","sizes","imageR","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.344f086d.chunk.js","sourcesContent":["const isNumeric = (n) => !isNaN(parseFloat(n) && isFinite(n));\n\nconst isOwnerId = (id) => {\n  return isNumeric(id);\n}\n\nexport const getArticles = ({ id, count, offset }) => {\n  const access_token = 'bdd3e910bdd3e910bdd3e9101bbdbcdbc8bbdd3bdd3e910e3f769d46b031001ca6ee7cd';\n  const cors_helper = 'https://cors-anywhere.herokuapp.com/'\n\n  let url = `${cors_helper}api.vk.com/method/wall.get?&access_token=${access_token}&count=${count}&offset=${offset}&v=5.85`;\n\n  if (isOwnerId(id)) {\n    url  += `&owner_id=${id}`\n  } else {\n    url  += `&domain=${id}`\n  }\n\n  return fetch(url)\n    .then(data => data.json())\n}\n","import React from 'react';\nimport './style.css';\n\n\nfunction Article({\n  text,\n  link,\n  additionalLink,\n  image,\n}) {\n  return <a href={link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"Article card\">\n\n    <div className=\"card-content\">\n      {additionalLink && <p className=\"title is-4\">{additionalLink}</p>}\n\n      {text && <div className=\"Article-text content\">\n        {text}\n      </div>}\n    </div>\n\n    {image && <div className=\"card-image\">\n      <figure className=\"image\">\n        <img src={image} alt=\"\" />\n      </figure>\n    </div>}\n  </a>\n}\n\nexport default Article;\n","import React from 'react';\nimport './style.css';\n\n\nfunction Pagination({\n  onBtnClick,\n  prevDisabled,\n  nextDisabled\n}) {\n\n  const handlePrevClick = () => {\n    if (!prevDisabled) {\n      onBtnClick('prev')\n    }\n  }\n\n  const handleNextClick = () => {\n    if (!nextDisabled) {\n      onBtnClick('next')\n    }\n  }\n\n  return <nav className=\"pagination\" role=\"navigation\" aria-label=\"pagination\">\n    <button className=\"pagination-previous\" onClick={handlePrevClick} disabled={prevDisabled}>Назад</button>\n    <button className=\"pagination-next\" onClick={handleNextClick} disabled={nextDisabled}>Вперёд</button>\n\n  </nav>\n}\n\nexport default Pagination;\n","import React, {useEffect, useState} from 'react';\nimport { getArticles } from '../../api';\nimport Article from '../Article'\nimport Pagination from \"../Pagination\";\nimport './style.css';\n\nfunction App() {\n  const initialCount = 12;\n\n  const articlesInitialState = {\n    count: 0,\n    items: [],\n  };\n\n  const [id, setID] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [needLoading, setNeedLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [loadOffset, setLoadOffset] = useState(0);\n  const [articles, setArticles] = useState(articlesInitialState);\n\n  const loadArticles = () => {\n    getArticles({ id, count: initialCount, offset: loadOffset })\n      .then(data => {\n        if (data.error) {\n          setError(data.error.error_msg);\n        }\n\n        if (data.response) {\n          const { items, count } = data.response;\n\n          setArticles({ items, count });\n        }\n\n      })\n      .catch(error => {\n        setError(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      })\n  }\n\n  const handleFormSubmit = event  => {\n    event.preventDefault();\n\n    setNeedLoading(true);\n  }\n\n  const handleChangeID = ({ target }) => {\n    setError('');\n    setLoadOffset(0);\n    setID(target.value);\n  }\n\n\n  const handlePaginationBtnClick = (type) => {\n    let offset;\n\n    if (type === 'prev') {\n      offset = loadOffset - initialCount;\n    }\n\n    if (type === 'next') {\n      offset = loadOffset + initialCount;\n    }\n\n    setLoadOffset(offset);\n    setNeedLoading(true);\n\n  }\n\n\n  const renderArticles = ({\n    id: articleID,\n    owner_id,\n    copy_history,\n    text,\n    attachments\n   }) => {\n    const props = {\n      text,\n      link: `https://vk.com/wall${owner_id}_${articleID}`\n    };\n\n    // Не вывожу репост\n    if (copy_history) {\n      return;\n    }\n\n\n    if (attachments) {\n      const images = attachments.find(({ type }) => type === 'photo');\n      const link = attachments.find(({ type }) => type === 'link');\n\n      if (images) {\n        const imagesSizes = images.photo.sizes;\n        const imageR = imagesSizes.find(({type}) => type === 'r');\n\n\n        props.image = (imageR && imageR.url) || (imagesSizes[3] && imagesSizes[3].url);\n      }\n\n      if (link) {\n        props.additionalLink = link.link.url;\n      }\n\n    }\n\n    return (\n      <div className=\"App-article\" key={articleID}>\n        <Article {...props} />\n      </div>\n    )\n  }\n\n  useEffect(function () {\n    if (needLoading && id) {\n      loadArticles();\n\n      setArticles({\n        ...articles,\n        items: [],\n      });\n\n      setLoading(true);\n      setError('');\n      setArticles(articlesInitialState);\n      setNeedLoading(false);\n\n    }\n\n  }, [\n    loadOffset,\n    id,\n    needLoading,\n  ]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <form className=\"App-form\" onSubmit={handleFormSubmit}>\n\n          <div className=\"field  is-grouped\">\n            <div className=\"control is-expanded\">\n              <input type=\"text\" className=\"input\" placeholder=\"ID пользователя или группы Вконтакте\" onChange={handleChangeID}/>\n            </div>\n            <div className=\"control\">\n              <button className=\"button is-link\" onClick={handleFormSubmit}>Поиск</button>\n            </div>\n          </div>\n        </form>\n\n        {!!articles.items.length && <div className=\"App-articles \">\n          {articles.items.map(renderArticles)}\n        </div>}\n\n        {!id && <div className=\"App-status\">\n          Пока здесь ничего нет, введите ID в текстовое поле выше :)\n        </div>}\n\n        {loading && <div className=\"App-status\">\n          Загрузка...\n        </div>}\n\n        {error && <div className=\"App-status App-status--error \">\n          {error}\n        </div>}\n\n\n        {!!articles.items.length && <div className=\"App-pagination\">\n          <Pagination\n            onBtnClick={handlePaginationBtnClick}\n            prevDisabled={loadOffset <= 0}\n            nextDisabled={loadOffset >= articles.count}\n          />\n        </div>}\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/index';\nimport * as serviceWorker from './serviceWorker';\nimport 'bulma/css/bulma.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}